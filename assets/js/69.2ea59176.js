(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{498:function(e,t,i){"use strict";i.r(t);var v=i(36),r=Object(v.a)({},(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h1",{attrs:{id:"bfs"}},[e._v("BFS")]),e._v(" "),i("p",[e._v("基础知识：")]),e._v(" "),i("p",[e._v("常见的 BFS 用来解决什么问题？(1) 简单图 (有向无向皆可) 的最短路径长度，注意是长度而不是具体的路径 (2) 拓扑排序 (3) 遍历一个图 (或者树)")]),e._v(" "),i("p",[e._v("BFS 基本模板 (需要记录层数或者不需要记录层数)")]),e._v(" "),i("p",[e._v("多数情况下时间复杂度空间复杂度都是 O (N+M)，N 为节点个数，M")]),e._v(" "),i("p",[e._v("基于树的 BFS：不需要专门一个 set 来记录访问过的节点")]),e._v(" "),i("ul",[i("li",[e._v("Leetcode 102 Binary Tree Level Order Traversal")]),e._v(" "),i("li",[e._v("Leetcode 103 Binary Tree Zigzag Level Order Traversal")]),e._v(" "),i("li",[e._v("Leetcode 297 Serialize and Deserialize Binary Tree (很好的 BFS 和双指针结合的题)")]),e._v(" "),i("li",[e._v("Leetcode 314 Binary Tree Vertical Order Traversal")])]),e._v(" "),i("p",[e._v("基于图的 BFS：(一般需要一个 set 来记录访问过的节点)")]),e._v(" "),i("ul",[i("li",[e._v("Leetcode 200。Number of Islands")]),e._v(" "),i("li",[e._v("Leetcode 133。Clone Graph")]),e._v(" "),i("li",[e._v("Leetcode 127。Word Ladder")]),e._v(" "),i("li",[e._v("Leetcode 490。The Maze")]),e._v(" "),i("li",[e._v("Leetcode 323。Connected Component in Undirected Graph")]),e._v(" "),i("li",[e._v("Leetcode 130。Surrounded Regions")]),e._v(" "),i("li",[e._v("Leetcode 752。Open the Lock")]),e._v(" "),i("li",[e._v("Leetcode 815。Bus Routes")]),e._v(" "),i("li",[e._v("Leetcode 1091。Shortest Path in Binary Matrix")]),e._v(" "),i("li",[e._v("Leetcode 542。01 Matrix")]),e._v(" "),i("li",[e._v("Leetcode 1293。Shortest Path in a Grid with Obstacles Elimination")])]),e._v(" "),i("p",[e._v("拓扑排序：(https://zh.wikipedia.org/wiki/%E6%8B%93%E6%92%B2%E6%8E%92%E5%BA%8F)")]),e._v(" "),i("ul",[i("li",[e._v("Leetcode 207 Course Schedule (I，II)")]),e._v(" "),i("li",[e._v("Leetcode 444 Sequence Reconstruction")]),e._v(" "),i("li",[e._v("Leetcode 269 Alien Dictionary")]),e._v(" "),i("li",[e._v("Leetcode 310 Minimum Height Trees")]),e._v(" "),i("li",[e._v("Leetcode 366 Find Leaves of Binary Tree")])])])}),[],!1,null,null,null);t.default=r.exports}}]);