(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{505:function(e,t,o){"use strict";o.r(t);var i=o(36),v=Object(i.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"堆-栈-队列-哈希表"}},[e._v("堆，栈，队列，哈希表")]),e._v(" "),o("p",[e._v("注意各个数据结构的基本原理，增删查改复杂度。")]),e._v(" "),o("p",[e._v("Queue 题目：")]),e._v(" "),o("ul",[o("li",[e._v("Leetcode 225。Implement Stack using Queues")]),e._v(" "),o("li",[e._v("Leetcode 346。Moving Average from Data Stream")]),e._v(" "),o("li",[e._v("Leetcode 281。Zigzag Iterator")]),e._v(" "),o("li",[e._v("Leetcode 1429。First Unique Number")]),e._v(" "),o("li",[e._v("Leetcode 54。Spiral Matrix")]),e._v(" "),o("li",[e._v("Leetcode 362。Design Hit Counter")])]),e._v(" "),o("p",[e._v("Stack 题目：")]),e._v(" "),o("ul",[o("li",[e._v("Leetcode 155。Min Stack (follow up Leetcode 716 Max Stack)")]),e._v(" "),o("li",[e._v("Leetcode 232。Implement Queue using Stacks")]),e._v(" "),o("li",[e._v("Leetcode 150。Evaluate Reverse Polish Notation")]),e._v(" "),o("li",[e._v("Leetcode 224。Basic Calculator II (I，II，III，IV)")]),e._v(" "),o("li",[e._v("Leetcode 20。Valid Parentheses")]),e._v(" "),o("li",[e._v("Leetcode 1472。Design Browser History")]),e._v(" "),o("li",[e._v("Leetcode 1209。Remove All Adjacent Duplicates in String II")]),e._v(" "),o("li",[e._v("Leetcode 1249。Minimum Remove to Make Valid Parentheses")]),e._v(" "),o("li",[e._v("Leetcode 735。Asteroid Collision")])]),e._v(" "),o("p",[e._v("Hashmap/ Hashset 题目：")]),e._v(" "),o("ul",[o("li",[e._v("Leetcode 1。Two Sum")]),e._v(" "),o("li",[e._v("Leetcode 146。LRU Cache (Python 中可以使用 OrderedDict 来代替)")]),e._v(" "),o("li",[e._v("Leetcode 128。Longest Consecutive Sequence")]),e._v(" "),o("li",[e._v("Leetcode 73。Set Matrix Zeroes")]),e._v(" "),o("li",[e._v("Leetcode 380。Insert Delete GetRandom O(1)")]),e._v(" "),o("li",[e._v("Leetcode 49。Group Anagrams")]),e._v(" "),o("li",[e._v("Leetcode 350。Intersection of Two Arrays II")]),e._v(" "),o("li",[e._v("Leetcode 299。Bulls and Cows")]),e._v(" "),o("li",[e._v("Leetcode 348 Design Tic-Tac-Toe")])]),e._v(" "),o("p",[e._v("Heap／Priority Queue 题目：")]),e._v(" "),o("ul",[o("li",[e._v("Leetcode 973。K Closest Points")]),e._v(" "),o("li",[e._v("Leetcode 347。Top k Largest Elements")]),e._v(" "),o("li",[e._v("Leetcode 23。Merge K Sorted Lists")]),e._v(" "),o("li",[e._v("Leetcode 264。Ugly Number II")]),e._v(" "),o("li",[e._v("Leetcode 1086。High Five")]),e._v(" "),o("li",[e._v("Leetcode 88。Merge Sorted Arrays")]),e._v(" "),o("li",[e._v("Leetcode 692。Top K Frequent Words")]),e._v(" "),o("li",[e._v("Leetcode 378。Kth Smallest Element in a Sorted Matrix")]),e._v(" "),o("li",[e._v("Leetcode 295。Find Median from Data Stream (标准解法是双 heap，但是 SortedDict 会非常容易)")]),e._v(" "),o("li",[e._v("Leetcode 767。Reorganize String")]),e._v(" "),o("li",[e._v("Leetcode 1438。Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit (这个题用单调双端队列、TreeMap、双 heap 都可以)")]),e._v(" "),o("li",[e._v("Leetcode 895。Maximum Frequency Stack")])])])}),[],!1,null,null,null);t.default=v.exports}}]);