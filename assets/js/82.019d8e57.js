(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{509:function(e,t,o){"use strict";o.r(t);var l=o(36),r=Object(l.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"排序类算法题"}},[e._v("排序类算法题")]),e._v(" "),o("p",[e._v("基础知识：快速排序 (Quick Sort)，归并排序 (Merge Sort) 的原理与代码实现。需要能讲明白代码中每一行的目的。快速排序时间复杂度平均状态下 O (NlogN)，空间复杂度 O (1)，归并排序最坏情况下时间复杂度 O (NlogN)，空间复杂度 O (N)")]),e._v(" "),o("p",[e._v("入门题目：")]),e._v(" "),o("ul",[o("li",[e._v("Leetcode 148。Sort List")]),e._v(" "),o("li",[e._v("Leetcode 56。Merge Intervals")]),e._v(" "),o("li",[e._v("Leetcode 27。Remove elements")])]),e._v(" "),o("p",[e._v("进阶题目：")]),e._v(" "),o("ul",[o("li",[e._v("Leetcode 179。Largest Number")]),e._v(" "),o("li",[e._v("Leetcode 75。Sort Colors")]),e._v(" "),o("li",[e._v("Leetcode 215。Kth Largest Element (可以用堆的解法替代)")]),e._v(" "),o("li",[e._v("Leetcode 4。Median of Two Sorted Arrays")])])])}),[],!1,null,null,null);t.default=r.exports}}]);